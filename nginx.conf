# Nginx Reverse Proxy Configuration
# This configuration sets up nginx as a reverse proxy for multiple web applications

# Main server block
server {
    listen 80;
    server_name 35.183.32.162 ec2-35-183-32-162.ca-central-1.compute.amazonaws.com;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # Root location - redirect to budget app by default
    location / {
        root /usr/share/nginx/html/budget-app;
        index index.html;
        try_files $uri $uri/ =404;
    }

    # Budget App - accessible at /budget or /budget/
    location /budget {
        alias /usr/share/nginx/html/budget-app;
        index index.html;
        try_files $uri $uri/ /budget/index.html;
        
        # Remove /budget prefix from requests
        location ~ ^/budget/(.*)$ {
            alias /usr/share/nginx/html/budget-app;
            try_files /$1 /$1/ /budget/index.html;
        }
    }

    # Roster App - accessible at /roster or /roster/
    location /roster {
        alias /usr/share/nginx/html/roster-app;
        index index.html;
        try_files $uri $uri/ /roster/index.html;
        
        # Remove /roster prefix from requests
        location ~ ^/roster/(.*)$ {
            alias /usr/share/nginx/html/roster-app;
            try_files /$1 /$1/ /roster/index.html;
        }
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Static files caching
    location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
}

# Optional: HTTPS configuration (uncomment and configure when SSL certificates are available)
# server {
#     listen 443 ssl http2;
#     server_name 35.183.32.162 ec2-35-183-32-162.ca-central-1.compute.amazonaws.com;
#     
#     ssl_certificate /etc/nginx/ssl/cert.pem;
#     ssl_certificate_key /etc/nginx/ssl/key.pem;
#     
#     # SSL configuration
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
#     ssl_prefer_server_ciphers off;
#     
#     # Include the same location blocks as above
#     include /etc/nginx/conf.d/locations.conf;
# }

# Redirect HTTP to HTTPS (uncomment when SSL is configured)
# server {
#     listen 80;
#     server_name 35.183.32.162 ec2-35-183-32-162.ca-central-1.compute.amazonaws.com;
#     return 301 https://$server_name$request_uri;
# }
